this is ben wilkins and this is my explanation for
my E-reader Class Diagram for
the Week 2 - understanding OOP assignment

visual-paradigm.com
Book, Customer, Reader, and Store classes

<><><><><><><><><><><><><><><><><><><>
/
Book-
variables,
getter methods,
get_contents() returns a page of contents based on the page_num parameter

/
Customer-
variables,
getter methods,
display_books_list() which displays the books owned by the customer
add_book() that adds a book instance to the customer's book list

/
Reader-
variables
getter methods,
-----------------
display_page() displays a page of the current book based on the current page,
It would get the page with a call to current_book.get_contents() passing in
the current page value

change_page() function that sets the current page to the passed in page_num
for convience,
I added a next_page() and previous_page() method that would simply 
increment or decrement the current page variable
-------------------
change_book() function that changes the current_book instance,
possibly using the customers get_book_list() method

/
I also decided to add in a Store class-
variables, available_books as class method
getter methods,
--------------------
display_available_books() displays the books available for purchase
methods to add and remove books from the available books list
search_books method that would allow customers to search the
available books by a passed-in parameter
--------------------
purchase_book() method that allows a customer to purchase a book. This
method would call the customer's add_book method inside it

<><><><><><><><><><><><><><><><><><><>

Overall, the Reader class is associated with the customer and book classes
through the customer and current book variables,
as well as the display_page() and change_book() methods

The store class is also associated with the customer and book classes
through the customer and available books variables,
as well as the purchase_book() method and the various methods that interact
with book instances.

The customer class is assoiciated with the book class because of the
books_list instance variable and the add_book() method

Notably, none of these classes are child classes of the others, but 
they would work together in a functioning e-reader application

That's all i've got, thanks!